// Reservation에 대한 Prisma 스키마

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Reservation {
  reservationId   Int      @id @default(autoincrement()) @map("reservationId")
  userId          Int
  sitterId        Int
  reservationDate DateTime @map("reservationDate")
  updatedAt       DateTime @default(updatedAt)       @map("updatedAt")
  createdAt       DateTime @default()@map("createdAt")
  reviews         Review[]

  // Foreign keys
  @@index([sitterId], name: "reservation_sitterid_foreign")
  @@index([userId], name: "reservation_userid_foreign")

  // Relationship fields
  user           User      @relation(fields: [userId], references: [userId])
  sitter         PetSitter @relation(fields: [sitterId], references: [sitterId])
}

// User에 대한 Prisma 스키마

model User {
  userId         Int      @id @default(autoincrement())
  userEmail      String   @unique @map("UserEmail")
  password       String   @map("password")
  userName       String   @map("userName")
  petName        String   @map("petName")
  petType        String   @map("petType")
  updatedAt      DateTime @map("updatedAt")
  createdAt      DateTime @map("createdAt")
  

  reviews Review[]
  // Relationship fields
  reservations   Reservation[]
}

// PetSitter에 대한 Prisma 스키마

model PetSitter {
  sitterId       Int      @id @default(autoincrement())
  career         Int      @map("career")
  nickName       Int      @map("nickName")
  sitterEmail    String   @map("sitterEmail")
  password       String   @map("password")
  sitterName     String   @map("sitterName")
  createdAt      DateTime @map("createdAt")
  updatedAt      DateTime @map("updatedAt")
  
  // Relationship fields
  reservations   Reservation[]
}

// Review에 대한 Prisma 스키마

model Review {
  reviewId       Int      @id @default(autoincrement()) @map("reviewId")
  reservation    Reservation @relation(fields: [reservationId], references: [reservationId])
  reservationId  Int      @map("reservationId")
  content        String   @map("content")
  createdAt      DateTime @map("createdAt")
  updatedAt      DateTime @map("updatedAt")
  user           User     @relation(fields: [userId], references: [userId])
  userId         Int      @map("userId")
  
  // Foreign keys
  @@index([reservationId], name: "review_reservationid_foreign")
  @@index([userId], name: "review_userid_foreign")
}